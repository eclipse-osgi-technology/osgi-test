plugins {
	id("biz.aQute.bnd.builder")
	id("maven-publish")
}

repositories {
	mavenCentral()
}

dependencies {
	def configurationName = pluginManager.hasPlugin("java-library") ? "api" : "compileOnly"
	add(configurationName, "org.osgi:osgi.annotation:8.1.0")
}

group = "org.osgi.test.example"
version = "0.1.0-SNAPSHOT"

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		// main publication
		maven(MavenPublication) {
			from(components.java)
			pom {
				name.set(artifactId)
				description.set(project.provider { project.description })
			}
		}
		// Configure pom metadata
		withType(MavenPublication) { publication ->
			pom {
				url.set("https://www.osgi.org")
				organization {
					name.set("OSGi Working Group")
					url.set("https://www.osgi.org")
				}
				licenses {
					license {
						name.set("Apache-2.0")
						url.set("https://opensource.org/licenses/Apache-2.0")
						distribution.set("repo")
						comments.set("This program and the accompanying materials are made available under the terms of the Apache License, Version 2.0.")
					}
				}
				scm {
					url.set("https://github.com/osgi/osgi-test")
					connection.set("scm:git:https://github.com/osgi/osgi-test.git")
					developerConnection.set("scm:git:git@github.com:osgi/osgi-test.git")
				}
				developers {
					developer {
						id.set("bjhargrave")
						name.set("BJ Hargrave")
						email.set("hargrave@us.ibm.com")
						url.set("https://github.com/bjhargrave")
						organization.set("IBM")
						organizationUrl.set("https://developer.ibm.com")
						roles.set(["developer"])
						timezone.set("America/New_York")
					}
				}
			}
			tasks.register("generatePomPropertiesFor${publication.name.capitalize()}Publication", WriteProperties) {
				description = "Generates the Maven pom.properties file for publication '${publication.name}'."
				group = PublishingPlugin.PUBLISH_TASK_GROUP
				setOutputFile(layout.buildDirectory.file("publications/${publication.name}/pom-default.properties"))
				property("groupId", project.provider { publication.groupId })
				property("artifactId", project.provider { publication.artifactId })
				property("version", project.provider { publication.version })
			}
		}
	}
}

// Disable gradle module metadata
tasks.withType(GenerateModuleMetadata).configureEach {
	enabled = false
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

tasks.named(JavaPlugin.JAR_TASK_NAME) {
	// META-INF/maven folder
	def metaInfMaven = publishing.publications.named("maven", MavenPublication).map {
		"META-INF/maven/${it.groupId}/${it.artifactId}"
	}
	// Include generated pom.xml file
	into(metaInfMaven) {
		from(tasks.named("generatePomFileForMavenPublication"))
		rename { "pom.xml" }
	}
	// Include generated pom.properties file
	into(metaInfMaven) {
		from(tasks.named("generatePomPropertiesForMavenPublication"))
		rename { "pom.properties" }
	}
	// Common Bnd configuration
	bundle {
		bnd("""
Bundle-Description: ${project.description}
Bundle-DocURL: https://www.osgi.org
Bundle-License: "Apache-2.0";link="https://opensource.org/licenses/Apache-2.0";description="Apache License, Version 2.0"
Bundle-Name: ${project.group}:${project.name}
Bundle-Vendor: OSGi Working Group
-noextraheaders: true
-noimportjava: true
""")
	}
}

tasks.withType(Test).configureEach {
	useJUnitPlatform()
	testLogging {
		setExceptionFormat("full")
		info {
			events("STANDARD_OUT", "STANDARD_ERROR", "STARTED", "FAILED", "PASSED", "SKIPPED")
		}
	}
}
